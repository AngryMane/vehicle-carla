# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from vehicle_shadow import signal_pb2 as vehicle__shadow_dot_signal__pb2


class SignalServiceStub(object):
    """Signal service for vehicle shadow operations
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Get = channel.unary_unary(
                '/vehicle_shadow.SignalService/Get',
                request_serializer=vehicle__shadow_dot_signal__pb2.GetRequest.SerializeToString,
                response_deserializer=vehicle__shadow_dot_signal__pb2.GetResponse.FromString,
                )
        self.Set = channel.unary_unary(
                '/vehicle_shadow.SignalService/Set',
                request_serializer=vehicle__shadow_dot_signal__pb2.SetRequest.SerializeToString,
                response_deserializer=vehicle__shadow_dot_signal__pb2.SetResponse.FromString,
                )
        self.Subscribe = channel.unary_stream(
                '/vehicle_shadow.SignalService/Subscribe',
                request_serializer=vehicle__shadow_dot_signal__pb2.SubscribeRequest.SerializeToString,
                response_deserializer=vehicle__shadow_dot_signal__pb2.SubscribeResponse.FromString,
                )
        self.Unsubscribe = channel.unary_unary(
                '/vehicle_shadow.SignalService/Unsubscribe',
                request_serializer=vehicle__shadow_dot_signal__pb2.UnsubscribeRequest.SerializeToString,
                response_deserializer=vehicle__shadow_dot_signal__pb2.UnsubscribeResponse.FromString,
                )
        self.Lock = channel.unary_unary(
                '/vehicle_shadow.SignalService/Lock',
                request_serializer=vehicle__shadow_dot_signal__pb2.LockRequest.SerializeToString,
                response_deserializer=vehicle__shadow_dot_signal__pb2.LockResponse.FromString,
                )
        self.Unlock = channel.unary_unary(
                '/vehicle_shadow.SignalService/Unlock',
                request_serializer=vehicle__shadow_dot_signal__pb2.UnlockRequest.SerializeToString,
                response_deserializer=vehicle__shadow_dot_signal__pb2.UnlockResponse.FromString,
                )


class SignalServiceServicer(object):
    """Signal service for vehicle shadow operations
    """

    def Get(self, request, context):
        """Get multiple signals by paths
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Set(self, request, context):
        """Set multiple signal values
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Subscribe(self, request, context):
        """Subscribe to signal changes
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Unsubscribe(self, request, context):
        """Unsubscribe from signal changes
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Lock(self, request, context):
        """Lock signal
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Unlock(self, request, context):
        """Unlock signal
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SignalServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Get': grpc.unary_unary_rpc_method_handler(
                    servicer.Get,
                    request_deserializer=vehicle__shadow_dot_signal__pb2.GetRequest.FromString,
                    response_serializer=vehicle__shadow_dot_signal__pb2.GetResponse.SerializeToString,
            ),
            'Set': grpc.unary_unary_rpc_method_handler(
                    servicer.Set,
                    request_deserializer=vehicle__shadow_dot_signal__pb2.SetRequest.FromString,
                    response_serializer=vehicle__shadow_dot_signal__pb2.SetResponse.SerializeToString,
            ),
            'Subscribe': grpc.unary_stream_rpc_method_handler(
                    servicer.Subscribe,
                    request_deserializer=vehicle__shadow_dot_signal__pb2.SubscribeRequest.FromString,
                    response_serializer=vehicle__shadow_dot_signal__pb2.SubscribeResponse.SerializeToString,
            ),
            'Unsubscribe': grpc.unary_unary_rpc_method_handler(
                    servicer.Unsubscribe,
                    request_deserializer=vehicle__shadow_dot_signal__pb2.UnsubscribeRequest.FromString,
                    response_serializer=vehicle__shadow_dot_signal__pb2.UnsubscribeResponse.SerializeToString,
            ),
            'Lock': grpc.unary_unary_rpc_method_handler(
                    servicer.Lock,
                    request_deserializer=vehicle__shadow_dot_signal__pb2.LockRequest.FromString,
                    response_serializer=vehicle__shadow_dot_signal__pb2.LockResponse.SerializeToString,
            ),
            'Unlock': grpc.unary_unary_rpc_method_handler(
                    servicer.Unlock,
                    request_deserializer=vehicle__shadow_dot_signal__pb2.UnlockRequest.FromString,
                    response_serializer=vehicle__shadow_dot_signal__pb2.UnlockResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'vehicle_shadow.SignalService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SignalService(object):
    """Signal service for vehicle shadow operations
    """

    @staticmethod
    def Get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vehicle_shadow.SignalService/Get',
            vehicle__shadow_dot_signal__pb2.GetRequest.SerializeToString,
            vehicle__shadow_dot_signal__pb2.GetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Set(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vehicle_shadow.SignalService/Set',
            vehicle__shadow_dot_signal__pb2.SetRequest.SerializeToString,
            vehicle__shadow_dot_signal__pb2.SetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Subscribe(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/vehicle_shadow.SignalService/Subscribe',
            vehicle__shadow_dot_signal__pb2.SubscribeRequest.SerializeToString,
            vehicle__shadow_dot_signal__pb2.SubscribeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Unsubscribe(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vehicle_shadow.SignalService/Unsubscribe',
            vehicle__shadow_dot_signal__pb2.UnsubscribeRequest.SerializeToString,
            vehicle__shadow_dot_signal__pb2.UnsubscribeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Lock(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vehicle_shadow.SignalService/Lock',
            vehicle__shadow_dot_signal__pb2.LockRequest.SerializeToString,
            vehicle__shadow_dot_signal__pb2.LockResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Unlock(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/vehicle_shadow.SignalService/Unlock',
            vehicle__shadow_dot_signal__pb2.UnlockRequest.SerializeToString,
            vehicle__shadow_dot_signal__pb2.UnlockResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
